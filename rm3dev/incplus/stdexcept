 /*(
 * The information  contained  herein is a trade secret of CAD-UL GmbH,
 * Ulm, Germany, and is confidential information. It is provided  under
 * a license agreement, and may be  copied or disclosed  only under the
 * terms of  that  agreement.  Any  reproduction or disclosure  of this
 * material  without  the express written  authorization of CAD-UL GmbH
 * or persuant to the license agreement is unlawful.
 *
 * Copyright (c) 1991-1998 CAD-UL GmbH
 * An unpublished work by CAD-UL GmbH, Germany
 * All rights reserved.
 *
 *
 * $Log: stdexcept,v $
 * Revision 1.2  2000/02/08 06:21:06  pla
 * LIBCXX V210
 *
 * Revision 1.1  1998/05/04 14:43:04  aki
 * Initial revision
 *
 */ 

// stdexcept standard header
#ifndef _STDEXCEPT_
#define _STDEXCEPT_

#pragma noarguments_in_registers(push)

#include <xstring>
#include <xstddef>				// 2008DE1
#include <exception>
_STD_BEGIN
		// CLASS logic_error
#if i8086 /* >> 4719DE1 >> */
#pragma       align   (logic_error=2)
#else
#pragma       align   (logic_error=4)         // 3055DE1
#endif /* << 4719DE1 << */
class logic_error : public exception {
public:
	explicit logic_error(const string& __S)
		: exception(""), _Str(__S) {}
	virtual ~logic_error()
		{}
	virtual const char *what() const _THROW0()
		{return (_Str.c_str()); }
protected:
	virtual void _Doraise() const
		{_RAISE(*this); }
private:
	string _Str;
	};
		// CLASS domain_error
#if i8086 /* >> 4719DE1 >> */
#pragma       align   (domain_error=2)
#else
#pragma       align   (domain_error=4)                // 3055DE1
#endif /* << 4719DE1 << */
class domain_error : public logic_error {
public:
	explicit domain_error(const string& __S)
		: logic_error(__S) {}
	virtual ~domain_error()
		{}
protected:
	virtual void _Doraise() const
		{_RAISE(*this); }
	};
		// CLASS invalid_argument
#if i8086 /* >> 4719DE1 >> */
#pragma       align   (invalid_argument=2)
#else
#pragma       align   (invalid_argument=4)            // 3055DE1
#endif /* << 4719DE1 << */
class invalid_argument : public logic_error {
public:
	explicit invalid_argument(const string& __S)
		: logic_error(__S) {}
	virtual ~invalid_argument()
		{}
protected:
	virtual void _Doraise() const
		{_RAISE(*this); }
	};
		// CLASS length_error
#if i8086 /* >> 4719DE1 >> */
#pragma       align   (length_error=2)
#else
#pragma       align   (length_error=4)                // 3055DE1
#endif /* << 4719DE1 << */
class length_error : public logic_error {
public:
	explicit length_error(const string& __S)
		: logic_error(__S) {}
	virtual ~length_error()
		{}
protected:
	virtual void _Doraise() const
		{_RAISE(*this); }
	};
		// CLASS out_of_range
#if i8086 /* >> 4719DE1 >> */
#pragma       align   (out_of_range=2)
#else
#pragma       align   (out_of_range=4)                // 3055DE1
#endif /* << 4719DE1 << */
class out_of_range : public logic_error {
public:
	explicit out_of_range(const string& __S)
		: logic_error(__S) {}
	virtual ~out_of_range()
		{}
protected:
	virtual void _Doraise() const
		{_RAISE(*this); }
	};
		// CLASS runtime_error
#if i8086 /* >> 4719DE1 >> */
#pragma       align   (runtime_error=2)
#else
#pragma       align   (runtime_error=4)               // 3055DE1
#endif /* << 4719DE1 << */
class runtime_error : public exception {
public:
	explicit runtime_error(const string& __S)
		: exception(""), _Str(__S) {}
	virtual ~runtime_error()
		{}
	virtual const char *what() const _THROW0()
		{return (_Str.c_str()); }
protected:
	virtual void _Doraise() const
		{_RAISE(*this); }
private:
	string _Str;
	};
		// CLASS overflow_error
#if i8086 /* >> 4719DE1 >> */
#pragma       align   (overflow_error=2)
#else
#pragma       align   (overflow_error=4)              // 3055DE1
#endif /* << 4719DE1 << */
class overflow_error : public runtime_error {
public:
	explicit overflow_error(const string& __S)
		: runtime_error(__S) {}
	virtual ~overflow_error()
		{}
protected:
	virtual void _Doraise() const
		{_RAISE(*this); }
	};
		// CLASS underflow_error
#if i8086 /* >> 4719DE1 >> */
#pragma       align   (underflow_error=2)
#else
#pragma       align   (underflow_error=4)             // 3055DE1
#endif /* << 4719DE1 << */
class underflow_error : public runtime_error {
public:
	explicit underflow_error(const string& __S)
		: runtime_error(__S) {}
	virtual ~underflow_error()
		{}
protected:
	virtual void _Doraise() const
		{_RAISE(*this); }
	};
		// CLASS range_error
#if i8086 /* >> 4719DE1 >> */
#pragma       align   (range_error=2)
#else
#pragma       align   (range_error=4)         // 3055DE1
#endif /* << 4719DE1 << */
class range_error : public runtime_error {
public:
	explicit range_error(const string& __S)
		: runtime_error(__S) {}
	virtual ~range_error()
		{}
protected:
	virtual void _Doraise() const
		{_RAISE(*this); }
	};
_STD_END

#pragma arguments_in_registers(pop)

#endif /* _STDEXCEPT_ */

/*
 * Copyright (c) 1994 by P.J. Plauger.  ALL RIGHTS RESERVED. 
 * Consult your license regarding permissions and restrictions.
V2.2:0414 */
